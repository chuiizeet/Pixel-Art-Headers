//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ALAd.h"

#import "ALStoreKitAd-Protocol.h"

@class ALAdSize, ALAtomicBoolean, ALOptOutButtonConfiguration, ALPendingReward, ALStoreKitPoststitialConfiguration, ALVideoButtonProperties, NSArray, NSDictionary, NSNumber, NSObject, NSString, NSURL, UIColor;

@interface ALDirectAd : ALAd <ALStoreKitAd>
{
    ALPendingReward *_pendingReward;
    ALAtomicBoolean *_reportRewardScheduled;
    ALStoreKitPoststitialConfiguration *_storeKitPoststitialConfiguration;
    NSArray *_videoEndPostbacks;
    NSArray *_clickTrackingPostbacks;
    NSArray *_videoClickTrackingPostbacks;
    NSArray *_impressionPostbacks;
    ALAtomicBoolean *_cancelRewardTask;
    NSObject *_pendingRewardLock;
}

@property(retain, nonatomic) NSObject *pendingRewardLock; // @synthesize pendingRewardLock=_pendingRewardLock;
@property(retain, nonatomic) ALAtomicBoolean *cancelRewardTask; // @synthesize cancelRewardTask=_cancelRewardTask;
@property(retain, nonatomic) NSArray *impressionPostbacks; // @synthesize impressionPostbacks=_impressionPostbacks;
@property(retain, nonatomic) NSArray *videoClickTrackingPostbacks; // @synthesize videoClickTrackingPostbacks=_videoClickTrackingPostbacks;
@property(retain, nonatomic) NSArray *clickTrackingPostbacks; // @synthesize clickTrackingPostbacks=_clickTrackingPostbacks;
@property(retain, nonatomic) NSArray *videoEndPostbacks; // @synthesize videoEndPostbacks=_videoEndPostbacks;
@property(retain, nonatomic) ALStoreKitPoststitialConfiguration *storeKitPoststitialConfiguration; // @synthesize storeKitPoststitialConfiguration=_storeKitPoststitialConfiguration;
@property(retain, nonatomic) ALAtomicBoolean *reportRewardScheduled; // @synthesize reportRewardScheduled=_reportRewardScheduled;
- (void).cxx_destruct;
- (unsigned long long)poststitialDismissTypeFromString:(id)arg1 isStoreKit:(_Bool)arg2;
- (unsigned long long)closeButtonStyleFromNumber:(id)arg1;
- (unsigned long long)transitionStyleFromString:(id)arg1;
- (id)getAndRemovePendingReward;
@property(retain, nonatomic) ALPendingReward *pendingReward; // @synthesize pendingReward=_pendingReward;
- (void)cancelRewardValidationTask;
@property(readonly, nonatomic, getter=shouldCancelRewardValidationTask) _Bool cancelRewardValidationTask; // @dynamic cancelRewardValidationTask;
@property(nonatomic) unsigned long long storekitPoststitialMode; // @dynamic storekitPoststitialMode;
@property(readonly, nonatomic) _Bool storekitPoststitialEnabled; // @dynamic storekitPoststitialEnabled;
@property(nonatomic) unsigned long long supportedStoreKitOrientations; // @dynamic supportedStoreKitOrientations;
@property(nonatomic) unsigned long long iTunesIdentifier; // @dynamic iTunesIdentifier;
@property(nonatomic) _Bool opensInStoreKit; // @dynamic opensInStoreKit;
@property(retain, nonatomic) NSDictionary *storeKitParameters; // @dynamic storeKitParameters;
@property(readonly, copy, nonatomic) NSString *mediationServeIdentifier; // @dynamic mediationServeIdentifier;
@property(readonly, nonatomic, getter=shouldStopCachingOnMediationTimeout) _Bool stopCachingOnMediationTimeout; // @dynamic stopCachingOnMediationTimeout;
@property(readonly, nonatomic, getter=isCachingBackgroundTaskExecutionEnabled) _Bool cachingBackgroundTaskExecutionEnabled; // @dynamic cachingBackgroundTaskExecutionEnabled;
@property(readonly, nonatomic, getter=isFullscreenAdBackgroundTaskExecutionEnabled) _Bool fullscreenAdBackgroundTaskExecutionEnabled; // @dynamic fullscreenAdBackgroundTaskExecutionEnabled;
@property(readonly, nonatomic) long long adRenderBackgroundTaskExecutionMilliseconds; // @dynamic adRenderBackgroundTaskExecutionMilliseconds;
@property(readonly, nonatomic, getter=shouldKeepScreenOn) _Bool keepScreenOn; // @dynamic keepScreenOn;
- (id)skipButtonVerticalLayoutFormatString;
- (id)skipButtonHorizontalLayoutFormatString;
- (id)closeButtonVerticalLayoutFormatString;
- (id)closeButtonHorizontalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *landscapeSkipButtonVerticalLayoutFormatString; // @dynamic landscapeSkipButtonVerticalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *landscapeSkipButtonHorizontalLayoutFormatString; // @dynamic landscapeSkipButtonHorizontalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *landscapeCloseButtonVerticalLayoutFormatString; // @dynamic landscapeCloseButtonVerticalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *landscapeCloseButtonHorizontalLayoutFormatString; // @dynamic landscapeCloseButtonHorizontalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *portraitSkipButtonVerticalLayoutFormatString; // @dynamic portraitSkipButtonVerticalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *portraitSkipButtonHorizontalLayoutFormatString; // @dynamic portraitSkipButtonHorizontalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *portraitCloseButtonVerticalLayoutFormatString; // @dynamic portraitCloseButtonVerticalLayoutFormatString;
@property(readonly, copy, nonatomic) NSString *portraitCloseButtonHorizontalLayoutFormatString; // @dynamic portraitCloseButtonHorizontalLayoutFormatString;
@property(nonatomic) unsigned long long deferredClickMode; // @dynamic deferredClickMode;
@property(readonly, nonatomic) _Bool deferredClickEnabled; // @dynamic deferredClickEnabled;
@property(readonly, nonatomic) UIColor *bufferIndicatorBackgroundColor; // @dynamic bufferIndicatorBackgroundColor;
@property(readonly, nonatomic) UIColor *bufferIndicatorColor; // @dynamic bufferIndicatorColor;
@property(readonly, nonatomic, getter=isBufferIndicatorInitialLoadEnabled) _Bool bufferIndicatorInitialLoadEnabled; // @dynamic bufferIndicatorInitialLoadEnabled;
@property(readonly, nonatomic, getter=isBufferIndicatorEnabled) _Bool bufferIndicatorEnabled; // @dynamic bufferIndicatorEnabled;
@property(readonly, nonatomic) _Bool presentOverCurrentContext; // @dynamic presentOverCurrentContext;
@property(readonly, nonatomic, getter=isForwardingAppLifecycleEventsToWebView) _Bool forwardingAppLifecycleEventsToWebView; // @dynamic forwardingAppLifecycleEventsToWebView;
@property(readonly, nonatomic, getter=shouldForwardCloseButtonTappedToPoststitial) _Bool forwardCloseButtonTappedToPoststitial; // @dynamic forwardCloseButtonTappedToPoststitial;
@property(readonly, nonatomic, getter=shouldApplyMuteSettingToPoststitial) _Bool applyMuteSettingToPoststitial; // @dynamic applyMuteSettingToPoststitial;
@property(readonly, nonatomic) double forwardPoststitialShownJavaScriptDelay; // @dynamic forwardPoststitialShownJavaScriptDelay;
@property(readonly, nonatomic) unsigned long long videoCompletionPercent; // @dynamic videoCompletionPercent;
@property(readonly, copy, nonatomic) NSString *cachePrefix; // @dynamic cachePrefix;
@property(readonly, nonatomic) UIColor *progressBarColor; // @dynamic progressBarColor;
@property(readonly, nonatomic) _Bool progressBarEnabled; // @dynamic progressBarEnabled;
@property(readonly, nonatomic) unsigned long long postitialDismissType; // @dynamic postitialDismissType;
@property(readonly, nonatomic) UIColor *graphicBackgroundColor; // @dynamic graphicBackgroundColor;
@property(readonly, nonatomic) UIColor *videoBackgroundColor; // @dynamic videoBackgroundColor;
@property(readonly, nonatomic) _Bool lockCurrentOrientation; // @dynamic lockCurrentOrientation;
@property(readonly, nonatomic) _Bool hideCloseButtonOnExit; // @dynamic hideCloseButtonOnExit;
@property(readonly, nonatomic) _Bool hideVideoCloseButtonOnExit; // @dynamic hideVideoCloseButtonOnExit;
@property(readonly, nonatomic) unsigned long long supportedInterfaceOrientations; // @dynamic supportedInterfaceOrientations;
@property(readonly, nonatomic, getter=shouldDismissAdOnMediaError) _Bool dismissAdOnMediaError; // @dynamic dismissAdOnMediaError;
@property(readonly, nonatomic) long long cacheDispatchQueue; // @dynamic cacheDispatchQueue;
@property(readonly, nonatomic, getter=shouldAllowBackgroundAudio) _Bool allowBackgroundAudio; // @dynamic allowBackgroundAudio;
@property(readonly, nonatomic, getter=shouldFixGraphicHighjackingAudioRunway) _Bool fixGraphicHighjackingAudioRunway; // @dynamic fixGraphicHighjackingAudioRunway;
@property(readonly, nonatomic) ALOptOutButtonConfiguration *optOutButtonConfiguration; // @dynamic optOutButtonConfiguration;
@property(readonly, nonatomic, getter=isOptOutButtonEnabled) _Bool optOutButtonEnabled; // @dynamic optOutButtonEnabled;
@property(readonly, nonatomic) NSArray *whitelistedHosts; // @dynamic whitelistedHosts;
@property(readonly, nonatomic) NSArray *whitelistedSchemes; // @dynamic whitelistedSchemes;
@property(readonly, nonatomic) NSArray *resourcePrefixes; // @dynamic resourcePrefixes;
@property(readonly, nonatomic) _Bool allowsInlineMediaPlayback; // @dynamic allowsInlineMediaPlayback;
@property(readonly, nonatomic) _Bool mediaPlaybackRequiresUserAction; // @dynamic mediaPlaybackRequiresUserAction;
@property(readonly, nonatomic) _Bool suppressesIncrementalRendering; // @dynamic suppressesIncrementalRendering;
@property(readonly, nonatomic, getter=shouldStreamWebKitOnCacheFailure) _Bool streamWebKitOnCacheFailure; // @dynamic streamWebKitOnCacheFailure;
@property(readonly, nonatomic) NSNumber *webKitRenderDelayMillis; // @dynamic webKitRenderDelayMillis;
@property(readonly, nonatomic, getter=isWebKitEnabled) _Bool webKitEnabled; // @dynamic webKitEnabled;
@property(readonly, nonatomic) ALVideoButtonProperties *videoButtonProperties; // @dynamic videoButtonProperties;
@property(readonly, copy, nonatomic) NSString *videoButtonHTMLSource; // @dynamic videoButtonHTMLSource;
@property(readonly, nonatomic, getter=shouldRenderVideoButtonOnlyIfHTMLSourceValid) _Bool renderVideoButtonOnlyIfHTMLSourceValid; // @dynamic renderVideoButtonOnlyIfHTMLSourceValid;
@property(retain, nonatomic) NSURL *unmuteImageURL; // @dynamic unmuteImageURL;
@property(retain, nonatomic) NSURL *muteImageURL; // @dynamic muteImageURL;
@property(readonly, nonatomic, getter=shouldShowSkipButtonOnClick) _Bool showSkipButtonOnClick; // @dynamic showSkipButtonOnClick;
@property(readonly, nonatomic) _Bool reportRewardFirePercentIncludeCloseDelay; // @dynamic reportRewardFirePercentIncludeCloseDelay;
@property(readonly, nonatomic) long long reportRewardFirePercent; // @dynamic reportRewardFirePercent;
@property(readonly, nonatomic) long long reportRewardFireDuration; // @dynamic reportRewardFireDuration;
@property(readonly, nonatomic) NSNumber *closeDelay; // @dynamic closeDelay;
@property(readonly, nonatomic) NSNumber *videoCloseDelay; // @dynamic videoCloseDelay;
@property(readonly, nonatomic) unsigned long long skipButtonStyle; // @dynamic skipButtonStyle;
@property(readonly, nonatomic) unsigned long long closeButtonStyle; // @dynamic closeButtonStyle;
@property(readonly, nonatomic) unsigned long long transitionStyle; // @dynamic transitionStyle;
@property(readonly, nonatomic) UIColor *countdownColor; // @dynamic countdownColor;
@property(readonly, nonatomic) NSNumber *countdownLength; // @dynamic countdownLength;
@property(readonly, nonatomic) _Bool videoClickableDuringPlayback; // @dynamic videoClickableDuringPlayback;
@property(nonatomic, getter=isHTMLResourcesCached) _Bool HTMLResourcesCached; // @dynamic HTMLResourcesCached;
- (void)removeVideoStream;
@property(readonly, nonatomic, getter=isVideoStream) _Bool videoStream; // @dynamic videoStream;
@property(readonly, copy, nonatomic) NSString *videoURLString; // @dynamic videoURLString;
@property(retain) NSURL *videoURL; // @dynamic videoURL;
- (id)clickTrackingURL;
- (id)videoEndURL;
@property(readonly, nonatomic) NSURL *videoClickDestinationURL; // @dynamic videoClickDestinationURL;
@property(readonly, nonatomic) NSURL *clickDestinationURL; // @dynamic clickDestinationURL;
@property(readonly, nonatomic, getter=isDismissOnSkip) _Bool dismissOnSkip; // @dynamic dismissOnSkip;
- (_Bool)hasVideoURL;
- (id)initWithAdObject:(id)arg1 fullResponse:(id)arg2 source:(unsigned long long)arg3 sdk:(id)arg4;

// Remaining properties
@property(readonly, nonatomic) NSNumber *adIdNumber;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) ALAdSize *size;
@property(readonly) Class superclass;

@end

