//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "ALMediationAdapterInitializationManagerDelegate-Protocol.h"

@class ALAdEventStatsManager, ALAdService, ALAdZoneManager, ALAtomicBoolean, ALConnectionManager, ALConsentDialogManager, ALDataCollector, ALErrorManager, ALEventService, ALFileManager, ALFullScreenAdTracker, ALGlobalStatsManager, ALLogger, ALMediationAdapterInitializationManager, ALMediationAdapterManager, ALMediationDebuggerService, ALMediationFallbackAdManager, ALMediationService, ALNativeAdService, ALPersistentPostbackManager, ALPostbackService, ALPreloadedAdManager, ALPreloadedNativeAdManager, ALRequestTracker, ALSdkConfiguration, ALSdkSettings, ALSessionTracker, ALSettingsManager, ALStoreKitService, ALStoreKitVisibilityTracker, ALTaskManager, ALTaskStatsManager, ALTransactionObserver, ALUserService, ALUserTokenManager, ALVariableService, NSString, NSUserDefaults;

@interface ALSdk : NSObject <ALMediationAdapterInitializationManagerDelegate>
{
    _Bool _initializing;
    _Bool _enabled;
    _Bool _firstSession;
    _Bool _launchedBefore;
    CDUnknownBlockType initializationCompletionHandler;
    NSString *_sdkKey;
    ALSdkSettings *_settings;
    ALSdkConfiguration *_configuration;
    ALAdService *_adService;
    ALNativeAdService *_nativeAdService;
    ALPostbackService *_postbackService;
    ALEventService *_eventService;
    ALUserService *_userService;
    ALVariableService *_variableService;
    ALStoreKitService *_storeKitService;
    ALLogger *_logger;
    ALTaskManager *_taskManager;
    ALSettingsManager *_settingsManager;
    ALConnectionManager *_connectionManager;
    ALGlobalStatsManager *_globalStatsManager;
    ALAdEventStatsManager *_adEventStatsManager;
    ALFileManager *_fileManager;
    ALPreloadedAdManager *_preloadedAdManager;
    ALPreloadedNativeAdManager *_preloadedNativeAdManager;
    ALAdZoneManager *_zoneManager;
    ALDataCollector *_dataCollector;
    ALPersistentPostbackManager *_persistentPostbackManager;
    ALSessionTracker *_sessionTracker;
    ALFullScreenAdTracker *_fullScreenAdTracker;
    ALStoreKitVisibilityTracker *_storeKitVisibilityTracker;
    NSUserDefaults *_userDefaults;
    ALErrorManager *_errorManager;
    ALTaskStatsManager *_taskStatsManager;
    ALConsentDialogManager *_consentDialogManager;
    ALUserTokenManager *_userTokenManager;
    ALTransactionObserver *_transactionObserver;
    ALRequestTracker *_requestTracker;
    ALMediationAdapterManager *_mediationAdapterManager;
    ALMediationAdapterInitializationManager *_mediationAdapterInitializationManager;
    ALMediationService *_mediationService;
    ALMediationDebuggerService *_mediationDebuggerService;
    ALMediationFallbackAdManager *_mediationFallbackAdManager;
    NSObject *_initializingLock;
    ALAtomicBoolean *_allowReinitOnStateReset;
    double _initializedTimestamp;
    CDUnknownBlockType _failureInvokedInitializationCompletionHandler;
}

+ (unsigned long long)versionCode;
+ (id)version;
+ (id)sharedWithKey:(id)arg1 settings:(id)arg2;
+ (id)sharedWithKey:(id)arg1;
+ (id)shared;
+ (void)initializeSdkWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (void)initializeSdk;
+ (void)initialize;
+ (id)instances;
+ (void)reinitializeAllWithUserConsent:(id)arg1;
+ (void)reinitializeAll;
+ (id)resourceBundle;
+ (id)sharedUserDefaults;
@property(copy, nonatomic) CDUnknownBlockType failureInvokedInitializationCompletionHandler; // @synthesize failureInvokedInitializationCompletionHandler=_failureInvokedInitializationCompletionHandler;
@property(nonatomic) double initializedTimestamp; // @synthesize initializedTimestamp=_initializedTimestamp;
@property(nonatomic, getter=hasLaunchedBefore) _Bool launchedBefore; // @synthesize launchedBefore=_launchedBefore;
@property(nonatomic, getter=isFirstSession) _Bool firstSession; // @synthesize firstSession=_firstSession;
@property(retain, nonatomic) ALAtomicBoolean *allowReinitOnStateReset; // @synthesize allowReinitOnStateReset=_allowReinitOnStateReset;
@property(retain, nonatomic) NSObject *initializingLock; // @synthesize initializingLock=_initializingLock;
@property(getter=isEnabledInternal) _Bool enabled; // @synthesize enabled=_enabled;
@property(getter=isInitializingInternal) _Bool initializing; // @synthesize initializing=_initializing;
@property(retain, nonatomic) ALMediationFallbackAdManager *mediationFallbackAdManager; // @synthesize mediationFallbackAdManager=_mediationFallbackAdManager;
@property(retain, nonatomic) ALMediationDebuggerService *mediationDebuggerService; // @synthesize mediationDebuggerService=_mediationDebuggerService;
@property(retain, nonatomic) ALMediationService *mediationService; // @synthesize mediationService=_mediationService;
@property(retain, nonatomic) ALMediationAdapterInitializationManager *mediationAdapterInitializationManager; // @synthesize mediationAdapterInitializationManager=_mediationAdapterInitializationManager;
@property(retain, nonatomic) ALMediationAdapterManager *mediationAdapterManager; // @synthesize mediationAdapterManager=_mediationAdapterManager;
@property(retain, nonatomic) ALRequestTracker *requestTracker; // @synthesize requestTracker=_requestTracker;
@property(retain, nonatomic) ALTransactionObserver *transactionObserver; // @synthesize transactionObserver=_transactionObserver;
@property(retain, nonatomic) ALUserTokenManager *userTokenManager; // @synthesize userTokenManager=_userTokenManager;
@property(retain, nonatomic) ALConsentDialogManager *consentDialogManager; // @synthesize consentDialogManager=_consentDialogManager;
@property(retain, nonatomic) ALTaskStatsManager *taskStatsManager; // @synthesize taskStatsManager=_taskStatsManager;
@property(retain, nonatomic) ALErrorManager *errorManager; // @synthesize errorManager=_errorManager;
@property(retain, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(retain, nonatomic) ALStoreKitVisibilityTracker *storeKitVisibilityTracker; // @synthesize storeKitVisibilityTracker=_storeKitVisibilityTracker;
@property(retain, nonatomic) ALFullScreenAdTracker *fullScreenAdTracker; // @synthesize fullScreenAdTracker=_fullScreenAdTracker;
@property(retain, nonatomic) ALSessionTracker *sessionTracker; // @synthesize sessionTracker=_sessionTracker;
@property(retain, nonatomic) ALPersistentPostbackManager *persistentPostbackManager; // @synthesize persistentPostbackManager=_persistentPostbackManager;
@property(retain, nonatomic) ALDataCollector *dataCollector; // @synthesize dataCollector=_dataCollector;
@property(retain, nonatomic) ALAdZoneManager *zoneManager; // @synthesize zoneManager=_zoneManager;
@property(retain, nonatomic) ALPreloadedNativeAdManager *preloadedNativeAdManager; // @synthesize preloadedNativeAdManager=_preloadedNativeAdManager;
@property(retain, nonatomic) ALPreloadedAdManager *preloadedAdManager; // @synthesize preloadedAdManager=_preloadedAdManager;
@property(retain, nonatomic) ALFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) ALAdEventStatsManager *adEventStatsManager; // @synthesize adEventStatsManager=_adEventStatsManager;
@property(retain, nonatomic) ALGlobalStatsManager *globalStatsManager; // @synthesize globalStatsManager=_globalStatsManager;
@property(retain, nonatomic) ALConnectionManager *connectionManager; // @synthesize connectionManager=_connectionManager;
@property(retain, nonatomic) ALSettingsManager *settingsManager; // @synthesize settingsManager=_settingsManager;
@property(retain, nonatomic) ALTaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(retain, nonatomic) ALLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) ALStoreKitService *storeKitService; // @synthesize storeKitService=_storeKitService;
@property(retain, nonatomic) ALVariableService *variableService; // @synthesize variableService=_variableService;
@property(retain, nonatomic) ALUserService *userService; // @synthesize userService=_userService;
@property(retain, nonatomic) ALEventService *eventService; // @synthesize eventService=_eventService;
@property(retain, nonatomic) ALPostbackService *postbackService; // @synthesize postbackService=_postbackService;
@property(retain, nonatomic) ALNativeAdService *nativeAdService; // @synthesize nativeAdService=_nativeAdService;
@property(retain, nonatomic) ALAdService *adService; // @synthesize adService=_adService;
@property(retain, nonatomic) ALSdkConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) ALSdkSettings *settings; // @synthesize settings=_settings;
@property(copy, nonatomic) NSString *sdkKey; // @synthesize sdkKey=_sdkKey;
@property(copy, nonatomic) CDUnknownBlockType initializationCompletionHandler; // @synthesize initializationCompletionHandler;
- (void).cxx_destruct;
- (void)showMediationDebugger;
- (void)initializeSdkWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)initializeSdk;
- (void)setPluginVersion:(id)arg1;
- (id)description;
@property(readonly, nonatomic, getter=isSessionTrackingEnabled) _Bool sessionTrackingEnabled;
- (void)enableSessionTrackingIfNeeded;
- (_Bool)getAndResetDidPauseAndResume;
@property(copy, nonatomic) NSString *mediationProvider; // @dynamic mediationProvider;
@property(readonly, copy, nonatomic) NSString *randomToken;
@property(readonly, copy, nonatomic) NSString *compassRandomToken;
@property(copy, nonatomic) NSString *userIdentifier; // @dynamic userIdentifier;
- (id)initWithKey:(id)arg1 usingSettings:(id)arg2;
- (void)resetSdkState;
- (void)callbackInitializationCompletionHandlerIfNeeded;
- (void)reinitialize;
- (void)ensureInitialized;
- (void)adapterInitializationManager:(id)arg1 didInitializeAdapter:(id)arg2;
- (void)markInitialized:(_Bool)arg1;
- (_Bool)isSetting:(id)arg1 enabledForAdFormat:(id)arg2;
- (_Bool)isSettingEnabledForBMLAdFormat:(id)arg1;
- (_Bool)arrayForKey:(id)arg1 containsString:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (id)constraintsForKeys:(id)arg1 variableBindings:(id)arg2;
- (id)numberForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (double)timeIntervalForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)settingForName:(id)arg1 defaultValue:(id)arg2;
- (void)scheduleConsentDialogAlertWithTimeIntervalMillis:(long long)arg1;

@end

