//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class ALLogger, ALSdk, NSMutableArray, NSMutableSet, NSOperationQueue;

@interface ALTaskManager : NSObject
{
    _Bool _initialized;
    ALSdk *_sdk;
    NSMutableArray *_scheduledPreInitOperations;
    NSObject *_preInitOperationsLock;
    NSMutableSet *_backgroundingAwareTimers;
    NSOperationQueue *_mainQueue;
    NSOperationQueue *_timeoutQueue;
    NSOperationQueue *_backgroundQueue;
    NSOperationQueue *_postbackQueue;
    NSOperationQueue *_cachingInterstitialQueue;
    NSOperationQueue *_cachingIncentivizedQueue;
    NSOperationQueue *_cachingOtherQueue;
    NSOperationQueue *_rewardQueue;
    NSOperationQueue *_mediationMainQueue;
    NSOperationQueue *_mediationTimeoutQueue;
    NSOperationQueue *_mediationBackgroundQueue;
    NSOperationQueue *_mediationPostbacksQueue;
    NSOperationQueue *_mediationBannerQueue;
    NSOperationQueue *_mediationInterstitialQueue;
    NSOperationQueue *_mediationIncentivizedQueue;
    NSOperationQueue *_mediationRewardQueue;
}

@property(retain, nonatomic) NSOperationQueue *mediationRewardQueue; // @synthesize mediationRewardQueue=_mediationRewardQueue;
@property(retain, nonatomic) NSOperationQueue *mediationIncentivizedQueue; // @synthesize mediationIncentivizedQueue=_mediationIncentivizedQueue;
@property(retain, nonatomic) NSOperationQueue *mediationInterstitialQueue; // @synthesize mediationInterstitialQueue=_mediationInterstitialQueue;
@property(retain, nonatomic) NSOperationQueue *mediationBannerQueue; // @synthesize mediationBannerQueue=_mediationBannerQueue;
@property(retain, nonatomic) NSOperationQueue *mediationPostbacksQueue; // @synthesize mediationPostbacksQueue=_mediationPostbacksQueue;
@property(retain, nonatomic) NSOperationQueue *mediationBackgroundQueue; // @synthesize mediationBackgroundQueue=_mediationBackgroundQueue;
@property(retain, nonatomic) NSOperationQueue *mediationTimeoutQueue; // @synthesize mediationTimeoutQueue=_mediationTimeoutQueue;
@property(retain, nonatomic) NSOperationQueue *mediationMainQueue; // @synthesize mediationMainQueue=_mediationMainQueue;
@property(retain, nonatomic) NSOperationQueue *rewardQueue; // @synthesize rewardQueue=_rewardQueue;
@property(retain, nonatomic) NSOperationQueue *cachingOtherQueue; // @synthesize cachingOtherQueue=_cachingOtherQueue;
@property(retain, nonatomic) NSOperationQueue *cachingIncentivizedQueue; // @synthesize cachingIncentivizedQueue=_cachingIncentivizedQueue;
@property(retain, nonatomic) NSOperationQueue *cachingInterstitialQueue; // @synthesize cachingInterstitialQueue=_cachingInterstitialQueue;
@property(retain, nonatomic) NSOperationQueue *postbackQueue; // @synthesize postbackQueue=_postbackQueue;
@property(retain, nonatomic) NSOperationQueue *backgroundQueue; // @synthesize backgroundQueue=_backgroundQueue;
@property(retain, nonatomic) NSOperationQueue *timeoutQueue; // @synthesize timeoutQueue=_timeoutQueue;
@property(retain, nonatomic) NSOperationQueue *mainQueue; // @synthesize mainQueue=_mainQueue;
@property(retain, nonatomic) NSMutableSet *backgroundingAwareTimers; // @synthesize backgroundingAwareTimers=_backgroundingAwareTimers;
@property(retain, nonatomic) NSObject *preInitOperationsLock; // @synthesize preInitOperationsLock=_preInitOperationsLock;
@property(retain, nonatomic) NSMutableArray *scheduledPreInitOperations; // @synthesize scheduledPreInitOperations=_scheduledPreInitOperations;
@property(nonatomic) __weak ALSdk *sdk; // @synthesize sdk=_sdk;
@property(nonatomic, getter=isInitialized) _Bool initialized; // @synthesize initialized=_initialized;
- (void).cxx_destruct;
@property(readonly, nonatomic) __weak ALLogger *logger; // @dynamic logger;
- (id)nameForQueue:(unsigned long long)arg1;
- (unsigned long long)pendingOperationsInQueue:(unsigned long long)arg1;
- (_Bool)queuePreInitOperationIfNeeded:(id)arg1;
- (void)markInitialized;
- (void)markInitializing;
- (void)execute:(id)arg1;
- (void)executeImmediately:(id)arg1;
- (void)delayExecutionFor:(id)arg1;
- (void)execute:(id)arg1 onQueue:(unsigned long long)arg2 withDelay:(double)arg3 isBackgroundingAware:(_Bool)arg4;
- (void)execute:(id)arg1 onQueue:(unsigned long long)arg2 withDelay:(double)arg3;
- (void)execute:(id)arg1 onQueue:(unsigned long long)arg2;
- (id)initWithSdk:(id)arg1;

@end

